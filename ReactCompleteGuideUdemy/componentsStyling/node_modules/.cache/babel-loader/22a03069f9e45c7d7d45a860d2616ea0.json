{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmspr\\\\.vscode\\\\git\\\\ChoBae-s-RoadToDeveloper\\\\ReactCompleteGuideUdemy\\\\componentsStyling\\\\src\\\\components\\\\UI\\\\Button\\\\Button.js\";\nimport React from 'react'; // 리액트 지원 CSS 모듈 -> 스타일드컴포넌트와 인라인 CSS작성법의 장점을 합친?\n//  CSS 모듈은 CSS 형식을 객체화 시킨다고 생각하면 편한듯\n//  범위지정과\n\nimport styles from './Button.module.css'; // import styled from \"styled-components\"; \n// 스타일드 컴포넌트 양식\n// const Button = styled.button`\n//   width: 100%;\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n//   // 미디어 쿼리 적용 가능 -> 다양한 디스플레이 적용\n//   @media (min-width: 768px) {\n//     width: auto;\n//   }\n//   // button-> &(가상선택자)를 통해 적용\n//   &:focus {\n//     outline: none;\n//   }\n//   &:hover,\n//   &:active {\n//     background: #ac0e77;\n//     border-color: #ac0e77;\n//     box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//   }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: props.type,\n    className: styles.button,\n    onClick: props.onClick,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/tmspr/.vscode/git/ChoBae-s-RoadToDeveloper/ReactCompleteGuideUdemy/componentsStyling/src/components/UI/Button/Button.js"],"names":["React","styles","Button","props","type","button","onClick","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,sBACE;AAAQ,IAAA,IAAI,EAAEA,KAAK,CAACC,IAApB;AAA0B,IAAA,SAAS,EAAEH,MAAM,CAACI,MAA5C;AAAoD,IAAA,OAAO,EAAEF,KAAK,CAACG,OAAnE;AAAA,cACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAML,M;AAON,eAAeA,MAAf","sourcesContent":["import React from 'react'\n// 리액트 지원 CSS 모듈 -> 스타일드컴포넌트와 인라인 CSS작성법의 장점을 합친?\n//  CSS 모듈은 CSS 형식을 객체화 시킨다고 생각하면 편한듯\n//  범위지정과\nimport styles from './Button.module.css'\n// import styled from \"styled-components\"; \n// 스타일드 컴포넌트 양식\n// const Button = styled.button`\n//   width: 100%;\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n//   // 미디어 쿼리 적용 가능 -> 다양한 디스플레이 적용\n//   @media (min-width: 768px) {\n//     width: auto;\n//   }\n\n//   // button-> &(가상선택자)를 통해 적용\n//   &:focus {\n//     outline: none;\n//   }\n\n//   &:hover,\n//   &:active {\n//     background: #ac0e77;\n//     border-color: #ac0e77;\n//     box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//   }\n// `;\n\nconst Button = props => {\n  return(\n    <button type={props.type} className={styles.button} onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n}\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}