{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmspr\\\\.vscode\\\\git\\\\ChoBae-s-RoadToDeveloper\\\\ReactCompleteGuideUdemy\\\\componentsStyling\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import styled from \"styled-components\"; ver2 스타일드컴포넌트\n\nimport Button from \"../../UI/Button/Button\";\nimport styles from './CourseInput.module';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n  & label {\n    font-weight: bold;\n    display: block;\n    // 스타일드컴포넌트 기능 -> $을 사용하면 자바스크립트 형식으로 작성할 수 있다.\n    color: ${props => props.isvaild ? 'red' : 'black'};\n    margin-bottom: 0.5rem;\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    border: 1px solid ${props => props.isvaild ? 'red' : '#ccc'};\n    background: ${props => props.isvaild ? '#e49fcd' : 'tranparent'};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n\n\n`;\n_c = FormControl;\n\nconst CourseInput = props => {\n  _s();\n\n  // 상태값\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isVaild, setIsVaild] = useState(true); // 인풋값 변경사항\n\n  const goalInputChangeHandler = event => {\n    //  인풋값 들어왔을때 에러표시 제거\n    if (event.target.value.trim().length > 0) {\n      setIsVaild(true);\n    } // 인풋값 변경시 업데이트\n\n\n    setEnteredValue(event.target.value);\n  }; // 제출버튼 클릭시 상태 끌어올리기\n\n\n  const formSubmitHandler = event => {\n    event.preventDefault(); // trim() -> 공백제거\n\n    if (enteredValue.trim().length === 0) {\n      setIsVaild(false);\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl // ver3 props사용 -> styled-component 기능\n    , {\n      isvaild: !isVaild // className={`form-control ${!isVaild ? \"invaild\" : \"\"}`} ver2 className을 수정하는 경우 $를 통해 여러가지의 스타일을 추가가능함\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // style={{ ver1 css코드를 camelCase로 작성해줘야함\n        //   borderColor: !isVaild ? \"red\" : \"black\", \n        //   background: !isVaild ? \"salmon\" : \"transparent\",\n        // }}\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseInput, \"8VApGSiaaD4r6gf7GFwsV8/esy0=\");\n\n_c2 = CourseInput;\nexport default CourseInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"CourseInput\");","map":{"version":3,"sources":["C:/Users/tmspr/.vscode/git/ChoBae-s-RoadToDeveloper/ReactCompleteGuideUdemy/componentsStyling/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","Button","styles","FormControl","styled","div","props","isvaild","CourseInput","enteredValue","setEnteredValue","isVaild","setIsVaild","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,WAAW,GAAGC,MAAM,CAACC,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAaC,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,KAAhB,GAAuB,OAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,KAAhB,GAAwB,MAAS;AAClE,kBAAkBD,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,YAAc;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;KAAMJ,W;;AA6BN,MAAMK,WAAW,GAAIF,KAAD,IAAW;AAAA;;AAC7B;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC,CAH6B,CAI7B;;AACA,QAAMa,sBAAsB,GAAIC,KAAD,IAAW;AACxC;AACA,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;AACxCN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAJuC,CAKxC;;;AACAF,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAPD,CAL6B,CAa7B;;;AACA,QAAMG,iBAAiB,GAAIL,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACM,cAAN,GADmC,CAEnC;;AACA,QAAIX,YAAY,CAACQ,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpCN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACDN,IAAAA,KAAK,CAACe,SAAN,CAAgBZ,YAAhB;AACD,GARD;;AAUA,sBACE;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BAEE,QAAC,WAAD,CACA;AADA;AAEA,MAAA,OAAO,EAAE,CAACR,OAFV,CAGA;AAHA;AAAA,8BAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAYE;AACE;AACA;AACA;AACA;AACA,QAAA,IAAI,EAAC,MALP;AAME,QAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAuBE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAnDD;;GAAML,W;;MAAAA,W;AAqDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\n// import styled from \"styled-components\"; ver2 스타일드컴포넌트\nimport Button from \"../../UI/Button/Button\";\nimport styles from './CourseInput.module';\n\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n  & label {\n    font-weight: bold;\n    display: block;\n    // 스타일드컴포넌트 기능 -> $을 사용하면 자바스크립트 형식으로 작성할 수 있다.\n    color: ${props=> (props.isvaild ? 'red': 'black')};\n    margin-bottom: 0.5rem;\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    border: 1px solid ${props=> (props.isvaild ? 'red' : '#ccc') };\n    background: ${props=> (props.isvaild ? '#e49fcd' : 'tranparent')};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n\n\n`;\nconst CourseInput = (props) => {\n  // 상태값\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isVaild, setIsVaild] = useState(true);\n  // 인풋값 변경사항\n  const goalInputChangeHandler = (event) => {\n    //  인풋값 들어왔을때 에러표시 제거\n    if (event.target.value.trim().length > 0) {\n      setIsVaild(true);\n    }\n    // 인풋값 변경시 업데이트\n    setEnteredValue(event.target.value);\n  };\n  // 제출버튼 클릭시 상태 끌어올리기\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    // trim() -> 공백제거\n    if (enteredValue.trim().length === 0) {\n      setIsVaild(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n   \n      <FormControl \n      // ver3 props사용 -> styled-component 기능\n      isvaild={!isVaild}\n      // className={`form-control ${!isVaild ? \"invaild\" : \"\"}`} ver2 className을 수정하는 경우 $를 통해 여러가지의 스타일을 추가가능함\n      >\n\n        <label\n        // style={{ color: !isVaild ? \"red\" : \"black\" }} ver1 css코드를 camelCase로 작성해줘야함 ps.이런 인라인식 css작성은 선호하지않음 \n        >\n          Course Goal\n        </label>\n\n        <input\n          // style={{ ver1 css코드를 camelCase로 작성해줘야함\n          //   borderColor: !isVaild ? \"red\" : \"black\", \n          //   background: !isVaild ? \"salmon\" : \"transparent\",\n          // }}\n          type=\"text\"\n          onChange={goalInputChangeHandler}\n        />\n      </FormControl>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}