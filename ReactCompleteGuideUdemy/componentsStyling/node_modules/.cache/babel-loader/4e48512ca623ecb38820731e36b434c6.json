{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmspr\\\\.vscode\\\\git\\\\ChoBae-s-RoadToDeveloper\\\\ReactCompleteGuideUdemy\\\\componentsStyling\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import styled from \"styled-components\"; ver3 스타일드컴포넌트\n\nimport Button from \"../../UI/Button/Button\"; // ver 4 css 모듈\n\nimport styles from './CourseInput.module.css'; // ver3 스타일드 컴포넌트\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     // 스타일드컴포넌트 기능 -> $을 사용하면 자바스크립트 형식으로 작성할 수 있다.\n//     color: ${props=> (props.isvaild ? 'red': 'black')};\n//     margin-bottom: 0.5rem;\n//   }\n//   & input {\n//     display: block;\n//     width: 100%;\n//     border: 1px solid ${props=> (props.isvaild ? 'red' : '#ccc') };\n//     background: ${props=> (props.isvaild ? '#e49fcd' : 'tranparent')};\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  // 상태값\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isVaild, setIsVaild] = useState(true); // 인풋값 변경사항\n\n  const goalInputChangeHandler = event => {\n    //  인풋값 들어왔을때 에러표시 제거\n    if (event.target.value.trim().length > 0) {\n      setIsVaild(true);\n    } // 인풋값 변경시 업데이트\n\n\n    setEnteredValue(event.target.value);\n  }; // 제출버튼 클릭시 상태 끌어올리기\n\n\n  const formSubmitHandler = event => {\n    event.preventDefault(); // trim() -> 공백제거\n\n    if (enteredValue.trim().length === 0) {\n      setIsVaild(false);\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      // ver4 css 모듈사용 \n      className: `${styles['form-control']} ${!isVaild && styles.invaild}` // styled-component 사용 -> prop 활용\n      // isvaild={!isVaild}\n      // ver2 className을 수정하는 경우 $를 통해 여러가지의 스타일을 추가가능함\n      // className={`form-control ${!isVaild ? \"invaild\" : \"\"}`} \n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // style={{ ver1 css코드를 camelCase로 작성해줘야함\n        //   borderColor: !isVaild ? \"red\" : \"black\", \n        //   background: !isVaild ? \"salmon\" : \"transparent\",\n        // }}\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseInput, \"8VApGSiaaD4r6gf7GFwsV8/esy0=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["C:/Users/tmspr/.vscode/git/ChoBae-s-RoadToDeveloper/ReactCompleteGuideUdemy/componentsStyling/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","Button","styles","CourseInput","props","enteredValue","setEnteredValue","isVaild","setIsVaild","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","invaild"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC,CAH6B,CAI7B;;AACA,QAAMS,sBAAsB,GAAIC,KAAD,IAAW;AACxC;AACA,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;AACxCN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAJuC,CAKxC;;;AACAF,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAPD,CAL6B,CAa7B;;;AACA,QAAMG,iBAAiB,GAAIL,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACM,cAAN,GADmC,CAEnC;;AACA,QAAIX,YAAY,CAACQ,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpCN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACDJ,IAAAA,KAAK,CAACa,SAAN,CAAgBZ,YAAhB;AACD,GARD;;AAUA,sBACE;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BAEE;AACA;AACE,MAAA,SAAS,EAAG,GAAEb,MAAM,CAAC,cAAD,CAAiB,IAAG,CAACK,OAAD,IAAYL,MAAM,CAACgB,OAAQ,EAFrE,CAGA;AACA;AACA;AACA;AANA;AAAA,8BASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAeE;AACE;AACA;AACA;AACA;AACA,QAAA,IAAI,EAAC,MALP;AAME,QAAA,QAAQ,EAAET;AANZ;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eA0BE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAtDD;;GAAMN,W;;KAAAA,W;AAwDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\n// import styled from \"styled-components\"; ver3 스타일드컴포넌트\nimport Button from \"../../UI/Button/Button\";\n// ver 4 css 모듈\nimport styles from './CourseInput.module.css';\n\n// ver3 스타일드 컴포넌트\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     // 스타일드컴포넌트 기능 -> $을 사용하면 자바스크립트 형식으로 작성할 수 있다.\n//     color: ${props=> (props.isvaild ? 'red': 'black')};\n//     margin-bottom: 0.5rem;\n//   }\n\n//   & input {\n//     display: block;\n//     width: 100%;\n//     border: 1px solid ${props=> (props.isvaild ? 'red' : '#ccc') };\n//     background: ${props=> (props.isvaild ? '#e49fcd' : 'tranparent')};\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n\n\n// `;\nconst CourseInput = (props) => {\n  // 상태값\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isVaild, setIsVaild] = useState(true);\n  // 인풋값 변경사항\n  const goalInputChangeHandler = (event) => {\n    //  인풋값 들어왔을때 에러표시 제거\n    if (event.target.value.trim().length > 0) {\n      setIsVaild(true);\n    }\n    // 인풋값 변경시 업데이트\n    setEnteredValue(event.target.value);\n  };\n  // 제출버튼 클릭시 상태 끌어올리기\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    // trim() -> 공백제거\n    if (enteredValue.trim().length === 0) {\n      setIsVaild(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n   \n      <div\n      // ver4 css 모듈사용 \n        className={`${styles['form-control']} ${!isVaild && styles.invaild}`}\n      // styled-component 사용 -> prop 활용\n      // isvaild={!isVaild}\n      // ver2 className을 수정하는 경우 $를 통해 여러가지의 스타일을 추가가능함\n      // className={`form-control ${!isVaild ? \"invaild\" : \"\"}`} \n      >\n\n        <label\n        // style={{ color: !isVaild ? \"red\" : \"black\" }} ver1 css코드를 camelCase로 작성해줘야함 ps.이런 인라인식 css작성은 선호하지않음 \n        >\n          Course Goal\n        </label>\n\n        <input\n          // style={{ ver1 css코드를 camelCase로 작성해줘야함\n          //   borderColor: !isVaild ? \"red\" : \"black\", \n          //   background: !isVaild ? \"salmon\" : \"transparent\",\n          // }}\n          type=\"text\"\n          onChange={goalInputChangeHandler}\n        />\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}